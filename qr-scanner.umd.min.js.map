{"version":3,"file":"qr-scanner.umd.min.js","sources":["src/qr-scanner.js"],"sourcesContent":["export default class QrScanner {\n  /* async */\n  static hasCamera() {\n    if (!navigator.mediaDevices) return Promise.resolve(false);\n    // note that enumerateDevices can always be called and does not prompt the user for permission. However, device\n    // labels are only readable if served via https and an active media stream exists or permanent permission is\n    // given. That doesn't matter for us though as we don't require labels.\n    return navigator.mediaDevices\n      .enumerateDevices()\n      .then((devices) => devices.some((device) => device.kind === \"videoinput\"))\n      .catch(() => false);\n  }\n\n  constructor(\n    video,\n    onDecode,\n    canvasSizeOrOnDecodeError = this._onDecodeError.bind(this),\n    canvasSize = QrScanner.DEFAULT_CANVAS_SIZE,\n    preferredFacingMode = \"environment\"\n  ) {\n    this.$video = video;\n    this.$canvas = document.createElement(\"canvas\");\n    this._onDecode = onDecode;\n    this._preferredFacingMode = preferredFacingMode;\n    this._active = false;\n    this._paused = false;\n    this._flashOn = false;\n\n    if (typeof canvasSizeOrOnDecodeError === \"number\") {\n      // legacy function signature where canvas size is the third argument\n      canvasSize = canvasSizeOrOnDecodeError;\n      console.warn(\n        \"You're using a deprecated version of the QrScanner constructor which will be removed in \" +\n          \"the future\"\n      );\n    } else {\n      this._onDecodeError = canvasSizeOrOnDecodeError;\n    }\n\n    this.$canvas.width = canvasSize;\n    this.$canvas.height = canvasSize;\n    this._sourceRect = {\n      x: 0,\n      y: 0,\n      width: canvasSize,\n      height: canvasSize,\n    };\n\n    this._onPlay = this._onPlay.bind(this);\n    this._onVisibilityChange = this._onVisibilityChange.bind(this);\n\n    // Allow inline playback on iPhone instead of requiring full screen playback,\n    // see https://webkit.org/blog/6784/new-video-policies-for-ios/\n    this.$video.playsInline = true;\n    // Allow play() on iPhone without requiring a user gesture. Should not really be needed as camera stream\n    // includes no audio, but just to be safe.\n    this.$video.muted = true;\n    this.$video.disablePictureInPicture = true;\n    this.$video.addEventListener(\"play\", this._onPlay);\n    document.addEventListener(\"visibilitychange\", this._onVisibilityChange);\n\n    this._qrWorker = new Worker(QrScanner.WORKER_PATH);\n  }\n\n  /* async */\n  hasFlash() {\n    if (!(\"ImageCapture\" in window)) {\n      return Promise.resolve(false);\n    }\n\n    const track = this.$video.srcObject\n      ? this.$video.srcObject.getVideoTracks()[0]\n      : null;\n    if (!track) {\n      return Promise.reject(\"Camera not started or not available\");\n    }\n\n    const imageCapture = new ImageCapture(track);\n    return imageCapture\n      .getPhotoCapabilities()\n      .then((result) => {\n        return result.fillLightMode.includes(\"flash\");\n      })\n      .catch((error) => {\n        console.warn(error);\n        return false;\n      });\n  }\n\n  isFlashOn() {\n    return this._flashOn;\n  }\n\n  /* async */\n  toggleFlash() {\n    return this._setFlash(!this._flashOn);\n  }\n\n  /* async */\n  turnFlashOff() {\n    return this._setFlash(false);\n  }\n\n  /* async */\n  turnFlashOn() {\n    return this._setFlash(true);\n  }\n\n  destroy() {\n    this.$video.removeEventListener(\"play\", this._onPlay);\n    document.removeEventListener(\"visibilitychange\", this._onVisibilityChange);\n\n    this.stop();\n    this._qrWorker.postMessage({\n      type: \"close\",\n    });\n  }\n\n  /* async */\n  start() {\n    if (this._active && !this._paused) {\n      return Promise.resolve();\n    }\n    if (window.location.protocol !== \"https:\") {\n      // warn but try starting the camera anyways\n      console.warn(\n        \"The camera stream is only accessible if the page is transferred via https.\"\n      );\n    }\n    this._active = true;\n    this._paused = false;\n    if (document.hidden) {\n      // camera will be started as soon as tab is in foreground\n      return Promise.resolve();\n    }\n    clearTimeout(this._offTimeout);\n    this._offTimeout = null;\n    if (this.$video.srcObject) {\n      // camera stream already/still set\n      this.$video.play();\n      return Promise.resolve();\n    }\n\n    let facingMode = this._preferredFacingMode;\n    return this._getCameraStream(facingMode, true)\n      .catch(() => {\n        // We (probably) don't have a camera of the requested facing mode\n        facingMode = facingMode === \"environment\" ? \"user\" : \"environment\";\n        return this._getCameraStream(); // throws if camera is not accessible (e.g. due to not https)\n      })\n      .then((stream) => {\n        // Try to determine the facing mode from the stream, otherwise use our guess. Note that the guess is not\n        // always accurate as Safari returns cameras of different facing mode, even for exact constraints.\n        facingMode = this._getFacingMode(stream) || facingMode;\n        this.$video.srcObject = stream;\n        this.$video.play();\n        this._setVideoMirror(facingMode);\n      })\n      .catch((e) => {\n        this._active = false;\n        throw e;\n      });\n  }\n\n  stop() {\n    this.pause();\n    this._active = false;\n  }\n\n  pause() {\n    this._paused = true;\n    if (!this._active) {\n      return;\n    }\n    this.$video.pause();\n    if (this._offTimeout) {\n      return;\n    }\n    this._offTimeout = setTimeout(() => {\n      const tracks = this.$video.srcObject\n        ? this.$video.srcObject.getTracks()\n        : [];\n      for (const track of tracks) {\n        track.stop(); //  note that this will also automatically turn the flashlight off\n      }\n      this.$video.srcObject = null;\n      this._offTimeout = null;\n    }, 300);\n  }\n\n  /* async */\n  static scanImage(\n    imageOrFileOrUrl,\n    sourceRect = null,\n    worker = null,\n    canvas = null,\n    fixedCanvasSize = false,\n    alsoTryWithoutSourceRect = false\n  ) {\n    let createdNewWorker = false;\n    let promise = new Promise((resolve, reject) => {\n      if (!worker) {\n        worker = new Worker(QrScanner.WORKER_PATH);\n        createdNewWorker = true;\n        worker.postMessage({ type: \"inversionMode\", data: \"both\" }); // scan inverted color qr codes too\n      }\n      let timeout, onMessage, onError;\n      onMessage = (event) => {\n        if (event.data.type !== \"qrResult\") {\n          return;\n        }\n        worker.removeEventListener(\"message\", onMessage);\n        worker.removeEventListener(\"error\", onError);\n        clearTimeout(timeout);\n        if (event.data.data !== null) {\n          resolve(event.data.data);\n        } else {\n          reject(QrScanner.NO_QR_CODE_FOUND);\n        }\n      };\n      onError = (e) => {\n        worker.removeEventListener(\"message\", onMessage);\n        worker.removeEventListener(\"error\", onError);\n        clearTimeout(timeout);\n        const errorMessage = !e ? \"Unknown Error\" : e.message || e;\n        reject(\"Scanner error: \" + errorMessage);\n      };\n      worker.addEventListener(\"message\", onMessage);\n      worker.addEventListener(\"error\", onError);\n      timeout = setTimeout(() => onError(\"timeout\"), 10000);\n      QrScanner._loadImage(imageOrFileOrUrl)\n        .then((image) => {\n          const imageData = QrScanner._getImageData(\n            image,\n            sourceRect,\n            canvas,\n            fixedCanvasSize\n          );\n          worker.postMessage(\n            {\n              type: \"decode\",\n              data: imageData,\n            },\n            [imageData.data.buffer]\n          );\n        })\n        .catch(onError);\n    });\n\n    if (sourceRect && alsoTryWithoutSourceRect) {\n      promise = promise.catch(() =>\n        QrScanner.scanImage(\n          imageOrFileOrUrl,\n          null,\n          worker,\n          canvas,\n          fixedCanvasSize\n        )\n      );\n    }\n\n    promise = promise.finally(() => {\n      if (!createdNewWorker) return;\n      worker.postMessage({\n        type: \"close\",\n      });\n    });\n\n    return promise;\n  }\n\n  setGrayscaleWeights(red, green, blue, useIntegerApproximation = true) {\n    this._qrWorker.postMessage({\n      type: \"grayscaleWeights\",\n      data: { red, green, blue, useIntegerApproximation },\n    });\n  }\n\n  setInversionMode(inversionMode) {\n    this._qrWorker.postMessage({\n      type: \"inversionMode\",\n      data: inversionMode,\n    });\n  }\n\n  _onPlay() {\n    this._updateSourceRect();\n    this._scanFrame();\n  }\n\n  _onVisibilityChange() {\n    if (document.hidden) {\n      this.pause();\n    } else if (this._active) {\n      this.start();\n    }\n  }\n\n  _updateSourceRect() {\n    const smallestDimension = Math.min(\n      this.$video.videoWidth,\n      this.$video.videoHeight\n    );\n    const sourceRectSize = Math.round((2 / 3) * smallestDimension);\n    this._sourceRect.width = this._sourceRect.height = sourceRectSize;\n    this._sourceRect.x = (this.$video.videoWidth - sourceRectSize) / 2;\n    this._sourceRect.y = (this.$video.videoHeight - sourceRectSize) / 2;\n  }\n\n  _scanFrame() {\n    if (!this._active || this.$video.paused || this.$video.ended) return false;\n    // using requestAnimationFrame to avoid scanning if tab is in background\n    requestAnimationFrame(() => {\n      if (this.$video.readyState <= 1) {\n        // Skip scans until the video is ready as drawImage() only works correctly on a video with readyState\n        // > 1, see https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/drawImage#Notes.\n        // This also avoids false positives for videos paused after a successful scan which remains visible on\n        // the canvas until the video is started again and ready.\n        this._scanFrame();\n        return;\n      }\n      QrScanner.scanImage(\n        this.$video,\n        this._sourceRect,\n        this._qrWorker,\n        this.$canvas,\n        true\n      )\n        .then(this._onDecode, (error) => {\n          if (!this._active) return;\n          this._onDecodeError(error);\n        })\n        .then(() => this._scanFrame());\n    });\n  }\n\n  _onDecodeError(error) {\n    // default error handler; can be overwritten in the constructor\n    if (error === QrScanner.NO_QR_CODE_FOUND) return;\n    console.log(error);\n  }\n\n  _getCameraStream(facingMode, exact = false) {\n    const constraintsToTry = [\n      {\n        width: { min: 512, max: 640 },\n        height: { min: 480, max: 640 },\n      },\n      {\n        width: { min: 320, max: 640 },\n        height: { min: 240, max: 640 },\n      },\n      {},\n    ];\n\n    if (facingMode) {\n      if (exact) {\n        facingMode = { exact: facingMode };\n      }\n      constraintsToTry.forEach(\n        (constraint) => (constraint.facingMode = facingMode)\n      );\n    }\n    return this._getMatchingCameraStream(constraintsToTry);\n  }\n\n  _getMatchingCameraStream(constraintsToTry) {\n    if (!navigator.mediaDevices || constraintsToTry.length === 0) {\n      return Promise.reject(\"Camera not found.\");\n    }\n    return navigator.mediaDevices\n      .getUserMedia({\n        video: constraintsToTry.shift(),\n      })\n      .catch(() => this._getMatchingCameraStream(constraintsToTry));\n  }\n\n  /* async */\n  _setFlash(on) {\n    return this.hasFlash()\n      .then((hasFlash) => {\n        if (!hasFlash) return Promise.reject(\"No flash available\");\n        // Note that the video track is guaranteed to exist at this point\n        return this.$video.srcObject.getVideoTracks()[0].applyConstraints({\n          advanced: [{ torch: on }],\n        });\n      })\n      .then(() => (this._flashOn = on));\n  }\n\n  _setVideoMirror(facingMode) {\n    // in user facing mode mirror the video to make it easier for the user to position the QR code\n    const scaleFactor = facingMode === \"user\" ? -1 : 1;\n    this.$video.style.transform = \"scaleX(\" + scaleFactor + \")\";\n  }\n\n  _getFacingMode(videoStream) {\n    const videoTrack = videoStream.getVideoTracks()[0];\n    if (!videoTrack) return null; // unknown\n    // inspired by https://github.com/JodusNodus/react-qr-reader/blob/master/src/getDeviceId.js#L13\n    return /rear|back|environment/i.test(videoTrack.label)\n      ? \"environment\"\n      : /front|user|face/i.test(videoTrack.label)\n      ? \"user\"\n      : null; // unknown\n  }\n\n  static _getImageData(\n    image,\n    sourceRect = null,\n    canvas = null,\n    fixedCanvasSize = false\n  ) {\n    canvas = canvas || document.createElement(\"canvas\");\n    const sourceRectX = sourceRect && sourceRect.x ? sourceRect.x : 0;\n    const sourceRectY = sourceRect && sourceRect.y ? sourceRect.y : 0;\n    const sourceRectWidth =\n      sourceRect && sourceRect.width\n        ? sourceRect.width\n        : image.width || image.videoWidth;\n    const sourceRectHeight =\n      sourceRect && sourceRect.height\n        ? sourceRect.height\n        : image.height || image.videoHeight;\n    if (\n      !fixedCanvasSize &&\n      (canvas.width !== sourceRectWidth || canvas.height !== sourceRectHeight)\n    ) {\n      canvas.width = sourceRectWidth;\n      canvas.height = sourceRectHeight;\n    }\n    const context = canvas.getContext(\"2d\", { alpha: false });\n    context.imageSmoothingEnabled = false; // gives less blurry images\n    context.drawImage(\n      image,\n      sourceRectX,\n      sourceRectY,\n      sourceRectWidth,\n      sourceRectHeight,\n      0,\n      0,\n      canvas.width,\n      canvas.height\n    );\n    return context.getImageData(0, 0, canvas.width, canvas.height);\n  }\n\n  /* async */\n  static _loadImage(imageOrFileOrBlobOrUrl) {\n    if (\n      imageOrFileOrBlobOrUrl instanceof HTMLCanvasElement ||\n      imageOrFileOrBlobOrUrl instanceof HTMLVideoElement ||\n      (window.ImageBitmap &&\n        imageOrFileOrBlobOrUrl instanceof window.ImageBitmap) ||\n      (window.OffscreenCanvas &&\n        imageOrFileOrBlobOrUrl instanceof window.OffscreenCanvas)\n    ) {\n      return Promise.resolve(imageOrFileOrBlobOrUrl);\n    } else if (imageOrFileOrBlobOrUrl instanceof Image) {\n      return QrScanner._awaitImageLoad(imageOrFileOrBlobOrUrl).then(\n        () => imageOrFileOrBlobOrUrl\n      );\n    } else if (\n      imageOrFileOrBlobOrUrl instanceof File ||\n      imageOrFileOrBlobOrUrl instanceof Blob ||\n      imageOrFileOrBlobOrUrl instanceof URL ||\n      typeof imageOrFileOrBlobOrUrl === \"string\"\n    ) {\n      const image = new Image();\n      if (\n        imageOrFileOrBlobOrUrl instanceof File ||\n        imageOrFileOrBlobOrUrl instanceof Blob\n      ) {\n        image.src = URL.createObjectURL(imageOrFileOrBlobOrUrl);\n      } else {\n        image.src = imageOrFileOrBlobOrUrl;\n      }\n      return QrScanner._awaitImageLoad(image).then(() => {\n        if (\n          imageOrFileOrBlobOrUrl instanceof File ||\n          imageOrFileOrBlobOrUrl instanceof Blob\n        ) {\n          URL.revokeObjectURL(image.src);\n        }\n        return image;\n      });\n    } else {\n      return Promise.reject(\"Unsupported image type.\");\n    }\n  }\n\n  /* async */\n  static _awaitImageLoad(image) {\n    return new Promise((resolve, reject) => {\n      if (image.complete && image.naturalWidth !== 0) {\n        // already loaded\n        resolve();\n      } else {\n        let onLoad, onError;\n        onLoad = () => {\n          image.removeEventListener(\"load\", onLoad);\n          image.removeEventListener(\"error\", onError);\n          resolve();\n        };\n        onError = () => {\n          image.removeEventListener(\"load\", onLoad);\n          image.removeEventListener(\"error\", onError);\n          reject(\"Image load error\");\n        };\n        image.addEventListener(\"load\", onLoad);\n        image.addEventListener(\"error\", onError);\n      }\n    });\n  }\n}\nQrScanner.DEFAULT_CANVAS_SIZE = 400;\nQrScanner.NO_QR_CODE_FOUND = \"No QR code found\";\nQrScanner.WORKER_PATH = \"qr-scanner-worker.min.js\";\n"],"names":["QrScanner","navigator","mediaDevices","enumerateDevices","then","devices","some","device","kind","catch","Promise","resolve","video","onDecode","canvasSizeOrOnDecodeError","_onDecodeError","bind","canvasSize","DEFAULT_CANVAS_SIZE","preferredFacingMode","$video","$canvas","document","createElement","_onDecode","_preferredFacingMode","_flashOn","_paused","_active","console","warn","width","height","_sourceRect","x","y","_onPlay","_onVisibilityChange","playsInline","muted","disablePictureInPicture","addEventListener","_qrWorker","Worker","WORKER_PATH","window","srcObject","getVideoTracks","track","getPhotoCapabilities","result","fillLightMode","includes","error","reject","_setFlash","removeEventListener","stop","postMessage","type","location","protocol","hidden","clearTimeout","_offTimeout","play","facingMode","_getCameraStream","stream","_getFacingMode","_setVideoMirror","e","pause","setTimeout","getTracks","imageOrFileOrUrl","sourceRect","worker","canvas","fixedCanvasSize","alsoTryWithoutSourceRect","createdNewWorker","promise","data","timeout","onMessage","onError","event","NO_QR_CODE_FOUND","_loadImage","image","imageData","buffer","scanImage","finally","red","green","blue","useIntegerApproximation","inversionMode","_updateSourceRect","_scanFrame","start","videoWidth","videoHeight","sourceRectSize","paused","ended","requestAnimationFrame","readyState","log","exact","min","max","constraintsToTry","forEach","constraint","_getMatchingCameraStream","length","getUserMedia","shift","on","hasFlash","applyConstraints","advanced","torch","style","transform","videoStream","test","videoTrack","label","sourceRectWidth","sourceRectHeight","alpha","context","imageSmoothingEnabled","drawImage","sourceRectX","sourceRectY","getImageData","imageOrFileOrBlobOrUrl","HTMLCanvasElement","HTMLVideoElement","ImageBitmap","OffscreenCanvas","Image","_awaitImageLoad","File","Blob","URL","src","createObjectURL","revokeObjectURL","complete","naturalWidth","onLoad"],"mappings":"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"}